local Wrapper = {}
local esp_config = { Toggle = false }

-- // サービス \\ --
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterPlayer = game:GetService("StarterPlayer")

-- // 変数 \\ --
local plr = Players.LocalPlayer

-- // 関数 \\ --

--position 指定したい位置(Vecter3型).
--orientation 指定したい角度(Vecter3型).
--orientationを指定しない場合、今向いている方向のままTPする.
function Wrapper:teleport_to_vector3(position, orientation)
    if plr.Character then
        if orientation == nil then
            plr.Character:PivotTo(CFrame.new(position) * CFrame.fromEulerAngles(math.rad(plr.Character.HumanoidRootPart.Rotation.X), math.rad(plr.Character.HumanoidRootPart.Rotation.Y), math.rad(plr.Character.HumanoidRootPart.Rotation.Z)))
        else
            plr.Character:PivotTo(CFrame.new(position) * CFrame.fromEulerAngles(math.rad(orientation.X), math.rad(orientation.Y), math.rad(orientation.Z)))
        end
    end
end

--player オブジェクトとして取得したいプレイヤー名(DisplayネームでもUserIdでも可).
function Wrapper:get_player_obj(playername)
    -- DisplayName もしくは UserId でターゲットプレイヤーを検索
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name == playername or player.DisplayName == playername then
            return player
        end
    end
    -- プレイヤーが見つからなかった場合はエラーを返す
    error("Player '" .. playername .. "' not found")
end

--player TP先のプレイヤー名(DisplayネームでもUserIdでも可).
function Wrapper:teleport_to_player(playername)
    if plr.Character then
        local target_player = Wrapper:get_player_obj(playername)

        -- ターゲットプレイヤーが見つかればテレポート
        if target_player.Character:FindFirstChild("HumanoidRootPart") then
            plr.Character:PivotTo(target_player.Character.HumanoidRootPart.CFrame)
        end
    end
end

-- [[ ESP ]] --

function create_billboardgui(playername)
	-- Instances
    
	local ESP = Instance.new("BillboardGui")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local UserImage = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local UserName = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
    local player_obj = Wrapper:get_player_obj(playername)

	-- Properties

	ESP.Name = "ESP"
	ESP.Parent = player_obj.Character
	ESP.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ESP.Active = true
	ESP.Adornee = player_obj.Character:FindFirstChild("Head")
	ESP.AlwaysOnTop = true
	ESP.ExtentsOffset = Vector3.new(0, 5, 0)
	ESP.LightInfluence = 1
	ESP.Size = UDim2.new(3, 50, 3, 45)

	UIAspectRatioConstraint.Parent = ESP
	UIAspectRatioConstraint.AspectRatio = 1.0429999828338623

    -- fetch the thumbnail
    local userId = player_obj.UserId
    local placeholder_image = "rbxassetid://0"
    local thumbType = Enum.ThumbnailType.HeadShot
    local thumbSize = Enum.ThumbnailSize.Size420x420
    local content, isReady = Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)

	UserImage.Name = "UserImage"
	UserImage.Parent = ESP
	UserImage.AnchorPoint = Vector2.new(0.5, 0.5)
	UserImage.BackgroundColor3 = Color3.new(1, 1, 1)
	UserImage.BackgroundTransparency = 1
	UserImage.BorderColor3 = Color3.new(0, 0, 0)
	UserImage.BorderSizePixel = 0
	UserImage.Position = UDim2.new(0.5, 0, 0.300000012, 0)
	UserImage.Size = UDim2.new(0.5, 5, 0.5, 5)
	UserImage.Image = (isReady and content) or placeholder_image

	UICorner.Parent = UserImage
	UICorner.CornerRadius = UDim.new(2, 0)

	UserName.Name = "UserName"
	UserName.Parent = ESP
	UserName.AnchorPoint = Vector2.new(0.5, 0.5)
	UserName.BackgroundColor3 = Color3.new(1, 1, 1)
	UserName.BackgroundTransparency = 1
	UserName.BorderColor3 = Color3.new(0, 0, 0)
	UserName.BorderSizePixel = 0
	UserName.Position = UDim2.new(0.5, 0, 0.75999999, 0)
	UserName.Size = UDim2.new(1, 5, 0.340000004, 5)
	UserName.Font = Enum.Font.SourceSans
    UserName.Text = player_obj.Name
	UserName.TextColor3 = Color3.new(1, 1, 1)
	UserName.TextScaled = true
	UserName.TextSize = 35
	UserName.TextStrokeTransparency = 0
	UserName.TextWrapped = true

	UITextSizeConstraint.Parent = UserName
	UITextSizeConstraint.MaxTextSize = 35
	UITextSizeConstraint.MinTextSize = 15
end

function destroy_billboardgui()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name ~= plr.Name then
            pcall(function()
                player.Character.ESP:Destroy()
            end)
            --標準のPlayer Nameを戻す
            player.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Viewer
        end
    end
end

function Wrapper:toggle_esp(config)
    esp_config = config

    if esp_config.Toggle then
        print("esp on")
        for _, player in pairs(Players:GetPlayers()) do
            if player.Name ~= plr.Name then

                pcall(function()
                    create_billboardgui(player.Name)
                end)

                --標準のPlayer Nameを隠す
                player.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
            end
        end
    else
        print("esp off")
        destroy_billboardgui()
    end 
end

-- [[ PlayerAdded ]] --

local function onPlayerAdded(player)
    -- Characterが生成されるまで待つ
    player.CharacterAdded:Wait()
    Wait(0.2)
    
    -- ESPがオンの場合にESPを作成
    if esp_config.Toggle then
        print(player.Name)
        create_billboardgui(player.Name)
    end

    --標準のPlayer Nameを隠す
    player.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
end

Players.PlayerAdded:Connect(onPlayerAdded)

-----------------------


return Wrapper